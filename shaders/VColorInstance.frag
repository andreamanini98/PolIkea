#version 450#extension GL_ARB_separate_shader_objects : enable#define N_SPOTLIGHTS 50#define N_POINTLIGHTS 50layout(location = 0) in vec3 fragPos;layout(location = 1) in vec3 fragNorm;layout(location = 2) in vec3 fragColor;layout(location = 0) out vec4 outColor;struct SpotLight {    float beta;   // decay exponent of the spotlight    float g;      // target distance of the spotlight    float cosout; // cosine of the outer angle of the spotlight    float cosin;  // cosine of the inner angle of the spotlight    vec3 lightPos;    vec3 lightDir;    vec4 lightColor;};struct PointLight {    float beta;   // decay exponent of the spotlight    float g;      // target distance of the spotlight    vec3 lightPos;    vec4 lightColor;};layout(set = 0, binding = 0) uniform GlobalUniformBufferObject {    vec3 DlightDir;     // direction of the direct light    vec3 DlightColor;   // color of the direct light    vec3 AmbLightColor; // ambient light    vec3 eyePos;        // position of the viewer    SpotLight spotLights[N_SPOTLIGHTS];    PointLight pointLights[N_POINTLIGHTS];    int nSpotLights;    int nPointLights;} gubo;layout(set = 1, binding = 0) uniform UniformBufferObject {    float amb;    float gamma;    vec3 sColor;    mat4 mvpMat;    mat4 mMat;    mat4 nMat;} ubo;void main() {    outColor = vec4(1.0f, 1.0f, 1.0f, 1.0f);}